


ARM Macro Assembler    Page 1 


    1 00000000         ;=======================================================
                       ==============
    2 00000000         ; File Name : 2410slib.s
    3 00000000         ; Function  : S3C2410  (Assembly)
    4 00000000         ; Program   : Shin, On Pil (SOP)
    5 00000000         ; Date      : March 20, 2002
    6 00000000         ; Version   : 0.0
    7 00000000         ; History
    8 00000000         ;   0.0 : Programming start (February 26,2002) -> SOP
    9 00000000         ;=======================================================
                       ==============
   10 00000000         
   11 00000000         ;Interrupt, FIQ/IRQ disable
   12 00000000 000000C0 
                       NOINT   EQU              0xc0        ;1100 0000  
   13 00000000         
   14 00000000         ;Check if tasm.exe(armasm -16 ...@ADS 1.0) is used.
   15 00000000                 GBLL             THUMBCODE
   16 00000000                 [                {CONFIG} = 16
   20 00000000 FALSE    
                       THUMBCODE
                               SETL             {FALSE}
   21 00000000                 ]
   22 00000000         
   23 00000000                 MACRO
   24 00000000                 MOV_PC_LR
   25 00000000                 [                THUMBCODE
   26 00000000                 bx               lr
   27 00000000                 |
   28 00000000                 mov              pc,lr
   29 00000000                 ]
   30 00000000                 MEND
   31 00000000         
   32 00000000                 AREA             |C$$code|, CODE, READONLY
   33 00000000         ;==============
   34 00000000         ; CPSR I,F bit
   35 00000000         ;==============
   36 00000000         ;int SET_IF(void);
   37 00000000         ;The return value is current CPSR.
   38 00000000                 EXPORT           SET_IF
   39 00000000         SET_IF
   40 00000000         ;This function works only if the processor is in previli
                       ged mode.
   41 00000000 E10F0000        mrs              r0,cpsr
   42 00000004 E1A01000        mov              r1,r0
   43 00000008 E38110C0        orr              r1,r1,#NOINT
   44 0000000C E12FF001        msr              cpsr_cxsf,r1
   45 00000010                 MOV_PC_LR
   25 00000010                 [                THUMBCODE
   28 00000010 E1A0F00E        mov              pc,lr
   29 00000014                 ]
   46 00000014         
   47 00000014         ;void WR_IF(int cpsrValue);
   48 00000014                 EXPORT           WR_IF
   49 00000014         WR_IF
   50 00000014         ;This function works only if the processor is in previli
                       ged mode.
   51 00000014 E12FF000        msr              cpsr_cxsf,r0
   52 00000018                 MOV_PC_LR



ARM Macro Assembler    Page 2 


   25 00000018                 [                THUMBCODE
   28 00000018 E1A0F00E        mov              pc,lr
   29 0000001C                 ]
   53 0000001C         
   54 0000001C         
   55 0000001C         ;void CLR_IF(void);
   56 0000001C                 EXPORT           CLR_IF
   57 0000001C         CLR_IF
   58 0000001C         ;This function works only if the processor is in previli
                       ged mode.
   59 0000001C E10F0000        mrs              r0,cpsr
   60 00000020 E3C000C0        bic              r0,r0,#NOINT
   61 00000024 E12FF000        msr              cpsr_cxsf,r0
   62 00000028                 MOV_PC_LR
   25 00000028                 [                THUMBCODE
   28 00000028 E1A0F00E        mov              pc,lr
   29 0000002C                 ]
   63 0000002C         
   64 0000002C         ;====================================
   65 0000002C         ; MMU Cache/TLB/etc on/off functions
   66 0000002C         ;====================================
   67 0000002C 00001000 
                       R1_I    EQU              (1<<12)
   68 0000002C 00000004 
                       R1_C    EQU              (1<<2)
   69 0000002C 00000002 
                       R1_A    EQU              (1<<1)
   70 0000002C 00000001 
                       R1_M    EQU              (1)
   71 0000002C 80000000 
                       R1_iA   EQU              (1<<31)
   72 0000002C 40000000 
                       R1_nF   EQU              (1<<30)
   73 0000002C         
   74 0000002C         ;void MMU_EnableICache(void)
   75 0000002C                 EXPORT           MMU_EnableICache
   76 0000002C         MMU_EnableICache
   77 0000002C EE110F10        mrc              p15,0,r0,c1,c0,0
   78 00000030 E3800A01        orr              r0,r0,#R1_I
   79 00000034 EE010F10        mcr              p15,0,r0,c1,c0,0
   80 00000038                 MOV_PC_LR
   25 00000038                 [                THUMBCODE
   28 00000038 E1A0F00E        mov              pc,lr
   29 0000003C                 ]
   81 0000003C         
   82 0000003C         ;void MMU_DisableICache(void)
   83 0000003C                 EXPORT           MMU_DisableICache
   84 0000003C         MMU_DisableICache
   85 0000003C EE110F10        mrc              p15,0,r0,c1,c0,0
   86 00000040 E3C00A01        bic              r0,r0,#R1_I
   87 00000044 EE010F10        mcr              p15,0,r0,c1,c0,0
   88 00000048                 MOV_PC_LR
   25 00000048                 [                THUMBCODE
   28 00000048 E1A0F00E        mov              pc,lr
   29 0000004C                 ]
   89 0000004C         
   90 0000004C         ;void MMU_EnableDCache(void)
   91 0000004C                 EXPORT           MMU_EnableDCache
   92 0000004C         MMU_EnableDCache



ARM Macro Assembler    Page 3 


   93 0000004C EE110F10        mrc              p15,0,r0,c1,c0,0
   94 00000050 E3800004        orr              r0,r0,#R1_C
   95 00000054 EE010F10        mcr              p15,0,r0,c1,c0,0
   96 00000058                 MOV_PC_LR
   25 00000058                 [                THUMBCODE
   28 00000058 E1A0F00E        mov              pc,lr
   29 0000005C                 ]
   97 0000005C         
   98 0000005C         ;void MMU_DisableDCache(void)
   99 0000005C                 EXPORT           MMU_DisableDCache
  100 0000005C         MMU_DisableDCache
  101 0000005C EE110F10        mrc              p15,0,r0,c1,c0,0
  102 00000060 E3C00004        bic              r0,r0,#R1_C
  103 00000064 EE010F10        mcr              p15,0,r0,c1,c0,0
  104 00000068                 MOV_PC_LR
   25 00000068                 [                THUMBCODE
   28 00000068 E1A0F00E        mov              pc,lr
   29 0000006C                 ]
  105 0000006C         
  106 0000006C         ;void MMU_EnableAlignFault(void)
  107 0000006C                 EXPORT           MMU_EnableAlignFault
  108 0000006C         MMU_EnableAlignFault
  109 0000006C EE110F10        mrc              p15,0,r0,c1,c0,0
  110 00000070 E3800002        orr              r0,r0,#R1_A
  111 00000074 EE010F10        mcr              p15,0,r0,c1,c0,0
  112 00000078                 MOV_PC_LR
   25 00000078                 [                THUMBCODE
   28 00000078 E1A0F00E        mov              pc,lr
   29 0000007C                 ]
  113 0000007C         
  114 0000007C         ;void MMU_DisableAlignFault(void)
  115 0000007C                 EXPORT           MMU_DisableAlignFault
  116 0000007C         MMU_DisableAlignFault
  117 0000007C EE110F10        mrc              p15,0,r0,c1,c0,0
  118 00000080 E3C00002        bic              r0,r0,#R1_A
  119 00000084 EE010F10        mcr              p15,0,r0,c1,c0,0
  120 00000088                 MOV_PC_LR
   25 00000088                 [                THUMBCODE
   28 00000088 E1A0F00E        mov              pc,lr
   29 0000008C                 ]
  121 0000008C         
  122 0000008C         ;void MMU_EnableMMU(void)
  123 0000008C                 EXPORT           MMU_EnableMMU
  124 0000008C         MMU_EnableMMU
  125 0000008C EE110F10        mrc              p15,0,r0,c1,c0,0
  126 00000090 E3800001        orr              r0,r0,#R1_M
  127 00000094 EE010F10        mcr              p15,0,r0,c1,c0,0
  128 00000098                 MOV_PC_LR
   25 00000098                 [                THUMBCODE
   28 00000098 E1A0F00E        mov              pc,lr
   29 0000009C                 ]
  129 0000009C         
  130 0000009C         ;void MMU_DisableMMU(void)
  131 0000009C                 EXPORT           MMU_DisableMMU
  132 0000009C         MMU_DisableMMU
  133 0000009C EE110F10        mrc              p15,0,r0,c1,c0,0
  134 000000A0 E3C00001        bic              r0,r0,#R1_M
  135 000000A4 EE010F10        mcr              p15,0,r0,c1,c0,0
  136 000000A8                 MOV_PC_LR



ARM Macro Assembler    Page 4 


   25 000000A8                 [                THUMBCODE
   28 000000A8 E1A0F00E        mov              pc,lr
   29 000000AC                 ]
  137 000000AC         
  138 000000AC         ;void MMU_SetFastBusMode(void)
  139 000000AC         ; FCLK:HCLK= 1:1
  140 000000AC                 EXPORT           MMU_SetFastBusMode
  141 000000AC         MMU_SetFastBusMode
  142 000000AC EE110F10        mrc              p15,0,r0,c1,c0,0
  143 000000B0 E3C00103        bic              r0,r0,#R1_iA:OR:R1_nF
  144 000000B4 EE010F10        mcr              p15,0,r0,c1,c0,0
  145 000000B8                 MOV_PC_LR
   25 000000B8                 [                THUMBCODE
   28 000000B8 E1A0F00E        mov              pc,lr
   29 000000BC                 ]
  146 000000BC         
  147 000000BC         ;void MMU_SetAsyncBusMode(void) 
  148 000000BC         ; FCLK:HCLK= 1:2
  149 000000BC                 EXPORT           MMU_SetAsyncBusMode
  150 000000BC         MMU_SetAsyncBusMode
  151 000000BC EE110F10        mrc              p15,0,r0,c1,c0,0
  152 000000C0 E3800103        orr              r0,r0,#R1_nF:OR:R1_iA
  153 000000C4 EE010F10        mcr              p15,0,r0,c1,c0,0
  154 000000C8                 MOV_PC_LR
   25 000000C8                 [                THUMBCODE
   28 000000C8 E1A0F00E        mov              pc,lr
   29 000000CC                 ]
  155 000000CC         
  156 000000CC         ;=========================
  157 000000CC         ; Set TTBase
  158 000000CC         ;=========================
  159 000000CC         ;void MMU_SetTTBase(int base)
  160 000000CC                 EXPORT           MMU_SetTTBase
  161 000000CC         MMU_SetTTBase
  162 000000CC         ;ro=TTBase
  163 000000CC EE020F10        mcr              p15,0,r0,c2,c0,0
  164 000000D0                 MOV_PC_LR
   25 000000D0                 [                THUMBCODE
   28 000000D0 E1A0F00E        mov              pc,lr
   29 000000D4                 ]
  165 000000D4         
  166 000000D4         ;=========================
  167 000000D4         ; Set Domain
  168 000000D4         ;=========================
  169 000000D4         ;void MMU_SetDomain(int domain)
  170 000000D4                 EXPORT           MMU_SetDomain
  171 000000D4         MMU_SetDomain
  172 000000D4         ;ro=domain
  173 000000D4 EE030F10        mcr              p15,0,r0,c3,c0,0
  174 000000D8                 MOV_PC_LR
   25 000000D8                 [                THUMBCODE
   28 000000D8 E1A0F00E        mov              pc,lr
   29 000000DC                 ]
  175 000000DC         
  176 000000DC         ;=========================
  177 000000DC         ; ICache/DCache functions
  178 000000DC         ;=========================
  179 000000DC         ;void MMU_InvalidateIDCache(void)
  180 000000DC                 EXPORT           MMU_InvalidateIDCache



ARM Macro Assembler    Page 5 


  181 000000DC         MMU_InvalidateIDCache
  182 000000DC EE070F17        mcr              p15,0,r0,c7,c7,0
  183 000000E0                 MOV_PC_LR
   25 000000E0                 [                THUMBCODE
   28 000000E0 E1A0F00E        mov              pc,lr
   29 000000E4                 ]
  184 000000E4         
  185 000000E4         ;void MMU_InvalidateICache(void)
  186 000000E4                 EXPORT           MMU_InvalidateICache
  187 000000E4         MMU_InvalidateICache
  188 000000E4 EE070F15        mcr              p15,0,r0,c7,c5,0
  189 000000E8                 MOV_PC_LR
   25 000000E8                 [                THUMBCODE
   28 000000E8 E1A0F00E        mov              pc,lr
   29 000000EC                 ]
  190 000000EC         
  191 000000EC         ;void MMU_InvalidateICacheMVA(U32 mva)
  192 000000EC                 EXPORT           MMU_InvalidateICacheMVA
  193 000000EC         MMU_InvalidateICacheMVA
  194 000000EC         ;r0=mva
  195 000000EC EE070F35        mcr              p15,0,r0,c7,c5,1
  196 000000F0                 MOV_PC_LR
   25 000000F0                 [                THUMBCODE
   28 000000F0 E1A0F00E        mov              pc,lr
   29 000000F4                 ]
  197 000000F4         
  198 000000F4         ;void MMU_PrefetchICacheMVA(U32 mva)
  199 000000F4                 EXPORT           MMU_PrefetchICacheMVA
  200 000000F4         MMU_PrefetchICacheMVA
  201 000000F4         ;r0=mva
  202 000000F4 EE070F3D        mcr              p15,0,r0,c7,c13,1
  203 000000F8                 MOV_PC_LR
   25 000000F8                 [                THUMBCODE
   28 000000F8 E1A0F00E        mov              pc,lr
   29 000000FC                 ]
  204 000000FC         
  205 000000FC         ;void MMU_InvalidateDCache(void)
  206 000000FC                 EXPORT           MMU_InvalidateDCache
  207 000000FC         MMU_InvalidateDCache
  208 000000FC EE070F16        mcr              p15,0,r0,c7,c6,0
  209 00000100                 MOV_PC_LR
   25 00000100                 [                THUMBCODE
   28 00000100 E1A0F00E        mov              pc,lr
   29 00000104                 ]
  210 00000104         
  211 00000104         ;void MMU_InvalidateDCacheMVA(U32 mva)
  212 00000104                 EXPORT           MMU_InvalidateDCacheMVA
  213 00000104         MMU_InvalidateDCacheMVA
  214 00000104         ;r0=mva
  215 00000104 EE070F36        mcr              p15,0,r0,c7,c6,1
  216 00000108                 MOV_PC_LR
   25 00000108                 [                THUMBCODE
   28 00000108 E1A0F00E        mov              pc,lr
   29 0000010C                 ]
  217 0000010C         
  218 0000010C         ;void MMU_CleanDCacheMVA(U32 mva)
  219 0000010C                 EXPORT           MMU_CleanDCacheMVA
  220 0000010C         MMU_CleanDCacheMVA
  221 0000010C         ;r0=mva



ARM Macro Assembler    Page 6 


  222 0000010C EE070F3A        mcr              p15,0,r0,c7,c10,1
  223 00000110                 MOV_PC_LR
   25 00000110                 [                THUMBCODE
   28 00000110 E1A0F00E        mov              pc,lr
   29 00000114                 ]
  224 00000114         
  225 00000114         ;void MMU_CleanInvalidateDCacheMVA(U32 mva)
  226 00000114                 EXPORT           MMU_CleanInvalidateDCacheMVA
  227 00000114         MMU_CleanInvalidateDCacheMVA
  228 00000114         ;r0=mva
  229 00000114 EE070F3E        mcr              p15,0,r0,c7,c14,1
  230 00000118                 MOV_PC_LR
   25 00000118                 [                THUMBCODE
   28 00000118 E1A0F00E        mov              pc,lr
   29 0000011C                 ]
  231 0000011C         
  232 0000011C         ;void MMU_CleanDCacheIndex(U32 index)
  233 0000011C                 EXPORT           MMU_CleanDCacheIndex
  234 0000011C         MMU_CleanDCacheIndex
  235 0000011C         ;r0=index 
  236 0000011C EE070F5A        mcr              p15,0,r0,c7,c10,2
  237 00000120                 MOV_PC_LR
   25 00000120                 [                THUMBCODE
   28 00000120 E1A0F00E        mov              pc,lr
   29 00000124                 ]
  238 00000124         
  239 00000124         ;void MMU_CleanInvalidateDCacheIndex(U32 index) 
  240 00000124                 EXPORT           MMU_CleanInvalidateDCacheIndex
  241 00000124         MMU_CleanInvalidateDCacheIndex
  242 00000124         ;r0=index
  243 00000124 EE070F5E        mcr              p15,0,r0,c7,c14,2
  244 00000128                 MOV_PC_LR
   25 00000128                 [                THUMBCODE
   28 00000128 E1A0F00E        mov              pc,lr
   29 0000012C                 ]
  245 0000012C         
  246 0000012C         ;void MMU_WaitForInterrupt(void)
  247 0000012C                 EXPORT           MMU_WaitForInterrupt
  248 0000012C         MMU_WaitForInterrupt
  249 0000012C EE070F90        mcr              p15,0,r0,c7,c0,4
  250 00000130                 MOV_PC_LR
   25 00000130                 [                THUMBCODE
   28 00000130 E1A0F00E        mov              pc,lr
   29 00000134                 ]
  251 00000134         
  252 00000134         ;===============
  253 00000134         ; TLB functions
  254 00000134         ;===============
  255 00000134         ;voic MMU_InvalidateTLB(void)
  256 00000134                 EXPORT           MMU_InvalidateTLB
  257 00000134         MMU_InvalidateTLB
  258 00000134 EE080F17        mcr              p15,0,r0,c8,c7,0
  259 00000138                 MOV_PC_LR
   25 00000138                 [                THUMBCODE
   28 00000138 E1A0F00E        mov              pc,lr
   29 0000013C                 ]
  260 0000013C         
  261 0000013C         ;void MMU_InvalidateITLB(void)
  262 0000013C                 EXPORT           MMU_InvalidateITLB



ARM Macro Assembler    Page 7 


  263 0000013C         MMU_InvalidateITLB
  264 0000013C EE080F15        mcr              p15,0,r0,c8,c5,0
  265 00000140                 MOV_PC_LR
   25 00000140                 [                THUMBCODE
   28 00000140 E1A0F00E        mov              pc,lr
   29 00000144                 ]
  266 00000144         
  267 00000144         ;void MMU_InvalidateITLBMVA(U32 mva)
  268 00000144                 EXPORT           MMU_InvalidateITLBMVA
  269 00000144         MMU_InvalidateITLBMVA
  270 00000144         ;ro=mva
  271 00000144 EE080F35        mcr              p15,0,r0,c8,c5,1
  272 00000148                 MOV_PC_LR
   25 00000148                 [                THUMBCODE
   28 00000148 E1A0F00E        mov              pc,lr
   29 0000014C                 ]
  273 0000014C         
  274 0000014C         ;void MMU_InvalidateDTLB(void)
  275 0000014C                 EXPORT           MMU_InvalidateDTLB
  276 0000014C         MMU_InvalidateDTLB
  277 0000014C EE080F16        mcr              p15,0,r0,c8,c6,0
  278 00000150                 MOV_PC_LR
   25 00000150                 [                THUMBCODE
   28 00000150 E1A0F00E        mov              pc,lr
   29 00000154                 ]
  279 00000154         
  280 00000154         ;void MMU_InvalidateDTLBMVA(U32 mva)
  281 00000154                 EXPORT           MMU_InvalidateDTLBMVA
  282 00000154         MMU_InvalidateDTLBMVA
  283 00000154         ;r0=mva
  284 00000154 EE080F36        mcr              p15,0,r0,c8,c6,1
  285 00000158                 MOV_PC_LR
   25 00000158                 [                THUMBCODE
   28 00000158 E1A0F00E        mov              pc,lr
   29 0000015C                 ]
  286 0000015C         
  287 0000015C         ;=================
  288 0000015C         ; Cache lock down
  289 0000015C         ;=================
  290 0000015C         ;void MMU_SetDCacheLockdownBase(U32 base)
  291 0000015C                 EXPORT           MMU_SetDCacheLockdownBase
  292 0000015C         MMU_SetDCacheLockdownBase
  293 0000015C         ;r0= victim & lockdown base
  294 0000015C EE090F10        mcr              p15,0,r0,c9,c0,0
  295 00000160                 MOV_PC_LR
   25 00000160                 [                THUMBCODE
   28 00000160 E1A0F00E        mov              pc,lr
   29 00000164                 ]
  296 00000164         
  297 00000164         ;void MMU_SetICacheLockdownBase(U32 base)
  298 00000164                 EXPORT           MMU_SetICacheLockdownBase
  299 00000164         MMU_SetICacheLockdownBase
  300 00000164         ;r0= victim & lockdown base
  301 00000164 EE090F30        mcr              p15,0,r0,c9,c0,1
  302 00000168                 MOV_PC_LR
   25 00000168                 [                THUMBCODE
   28 00000168 E1A0F00E        mov              pc,lr
   29 0000016C                 ]
  303 0000016C         



ARM Macro Assembler    Page 8 


  304 0000016C         ;=================
  305 0000016C         ; TLB lock down
  306 0000016C         ;=================
  307 0000016C         ;void MMU_SetDTLBLockdown(U32 baseVictim)
  308 0000016C                 EXPORT           MMU_SetDTLBLockdown
  309 0000016C         MMU_SetDTLBLockdown
  310 0000016C         ;r0= baseVictim
  311 0000016C EE0A0F10        mcr              p15,0,r0,c10,c0,0
  312 00000170                 MOV_PC_LR
   25 00000170                 [                THUMBCODE
   28 00000170 E1A0F00E        mov              pc,lr
   29 00000174                 ]
  313 00000174         
  314 00000174         ;void MMU_SetITLBLockdown(U32 baseVictim)
  315 00000174                 EXPORT           MMU_SetITLBLockdown
  316 00000174         MMU_SetITLBLockdown
  317 00000174         ;r0= baseVictim
  318 00000174 EE0A0F30        mcr              p15,0,r0,c10,c0,1
  319 00000178                 MOV_PC_LR
   25 00000178                 [                THUMBCODE
   28 00000178 E1A0F00E        mov              pc,lr
   29 0000017C                 ]
  320 0000017C         
  321 0000017C         ;============
  322 0000017C         ; Process ID
  323 0000017C         ;============
  324 0000017C         ;void MMU_SetProcessId(U32 pid)
  325 0000017C                 EXPORT           MMU_SetProcessId
  326 0000017C         MMU_SetProcessId
  327 0000017C         ;r0= pid
  328 0000017C EE0D0F10        mcr              p15,0,r0,c13,c0,0
  329 00000180                 MOV_PC_LR
   25 00000180                 [                THUMBCODE
   28 00000180 E1A0F00E        mov              pc,lr
   29 00000184                 ]
  330 00000184         
  331 00000184                 END
Command Line: --debug --xref --cpu=ARM920T --depend=..\obj\2410slib.d -o..\obj\
2410slib.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc
\Samsung --list=.\2410slib.lst ..\src\2410slib.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

C$$code 00000000

Symbol: C$$code
   Definitions
      At line 32 in file ..\src\2410slib.s
   Uses
      None
Comment: C$$code unused
CLR_IF 0000001C

Symbol: CLR_IF
   Definitions
      At line 57 in file ..\src\2410slib.s
   Uses
      At line 56 in file ..\src\2410slib.s
Comment: CLR_IF used once
MMU_CleanDCacheIndex 0000011C

Symbol: MMU_CleanDCacheIndex
   Definitions
      At line 234 in file ..\src\2410slib.s
   Uses
      At line 233 in file ..\src\2410slib.s
Comment: MMU_CleanDCacheIndex used once
MMU_CleanDCacheMVA 0000010C

Symbol: MMU_CleanDCacheMVA
   Definitions
      At line 220 in file ..\src\2410slib.s
   Uses
      At line 219 in file ..\src\2410slib.s
Comment: MMU_CleanDCacheMVA used once
MMU_CleanInvalidateDCacheIndex 00000124

Symbol: MMU_CleanInvalidateDCacheIndex
   Definitions
      At line 241 in file ..\src\2410slib.s
   Uses
      At line 240 in file ..\src\2410slib.s
Comment: MMU_CleanInvalidateDCacheIndex used once
MMU_CleanInvalidateDCacheMVA 00000114

Symbol: MMU_CleanInvalidateDCacheMVA
   Definitions
      At line 227 in file ..\src\2410slib.s
   Uses
      At line 226 in file ..\src\2410slib.s
Comment: MMU_CleanInvalidateDCacheMVA used once
MMU_DisableAlignFault 0000007C

Symbol: MMU_DisableAlignFault
   Definitions
      At line 116 in file ..\src\2410slib.s
   Uses
      At line 115 in file ..\src\2410slib.s
Comment: MMU_DisableAlignFault used once
MMU_DisableDCache 0000005C

Symbol: MMU_DisableDCache



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 100 in file ..\src\2410slib.s
   Uses
      At line 99 in file ..\src\2410slib.s
Comment: MMU_DisableDCache used once
MMU_DisableICache 0000003C

Symbol: MMU_DisableICache
   Definitions
      At line 84 in file ..\src\2410slib.s
   Uses
      At line 83 in file ..\src\2410slib.s
Comment: MMU_DisableICache used once
MMU_DisableMMU 0000009C

Symbol: MMU_DisableMMU
   Definitions
      At line 132 in file ..\src\2410slib.s
   Uses
      At line 131 in file ..\src\2410slib.s
Comment: MMU_DisableMMU used once
MMU_EnableAlignFault 0000006C

Symbol: MMU_EnableAlignFault
   Definitions
      At line 108 in file ..\src\2410slib.s
   Uses
      At line 107 in file ..\src\2410slib.s
Comment: MMU_EnableAlignFault used once
MMU_EnableDCache 0000004C

Symbol: MMU_EnableDCache
   Definitions
      At line 92 in file ..\src\2410slib.s
   Uses
      At line 91 in file ..\src\2410slib.s
Comment: MMU_EnableDCache used once
MMU_EnableICache 0000002C

Symbol: MMU_EnableICache
   Definitions
      At line 76 in file ..\src\2410slib.s
   Uses
      At line 75 in file ..\src\2410slib.s
Comment: MMU_EnableICache used once
MMU_EnableMMU 0000008C

Symbol: MMU_EnableMMU
   Definitions
      At line 124 in file ..\src\2410slib.s
   Uses
      At line 123 in file ..\src\2410slib.s
Comment: MMU_EnableMMU used once
MMU_InvalidateDCache 000000FC

Symbol: MMU_InvalidateDCache
   Definitions
      At line 207 in file ..\src\2410slib.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 206 in file ..\src\2410slib.s
Comment: MMU_InvalidateDCache used once
MMU_InvalidateDCacheMVA 00000104

Symbol: MMU_InvalidateDCacheMVA
   Definitions
      At line 213 in file ..\src\2410slib.s
   Uses
      At line 212 in file ..\src\2410slib.s
Comment: MMU_InvalidateDCacheMVA used once
MMU_InvalidateDTLB 0000014C

Symbol: MMU_InvalidateDTLB
   Definitions
      At line 276 in file ..\src\2410slib.s
   Uses
      At line 275 in file ..\src\2410slib.s
Comment: MMU_InvalidateDTLB used once
MMU_InvalidateDTLBMVA 00000154

Symbol: MMU_InvalidateDTLBMVA
   Definitions
      At line 282 in file ..\src\2410slib.s
   Uses
      At line 281 in file ..\src\2410slib.s
Comment: MMU_InvalidateDTLBMVA used once
MMU_InvalidateICache 000000E4

Symbol: MMU_InvalidateICache
   Definitions
      At line 187 in file ..\src\2410slib.s
   Uses
      At line 186 in file ..\src\2410slib.s
Comment: MMU_InvalidateICache used once
MMU_InvalidateICacheMVA 000000EC

Symbol: MMU_InvalidateICacheMVA
   Definitions
      At line 193 in file ..\src\2410slib.s
   Uses
      At line 192 in file ..\src\2410slib.s
Comment: MMU_InvalidateICacheMVA used once
MMU_InvalidateIDCache 000000DC

Symbol: MMU_InvalidateIDCache
   Definitions
      At line 181 in file ..\src\2410slib.s
   Uses
      At line 180 in file ..\src\2410slib.s
Comment: MMU_InvalidateIDCache used once
MMU_InvalidateITLB 0000013C

Symbol: MMU_InvalidateITLB
   Definitions
      At line 263 in file ..\src\2410slib.s
   Uses
      At line 262 in file ..\src\2410slib.s
Comment: MMU_InvalidateITLB used once
MMU_InvalidateITLBMVA 00000144



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: MMU_InvalidateITLBMVA
   Definitions
      At line 269 in file ..\src\2410slib.s
   Uses
      At line 268 in file ..\src\2410slib.s
Comment: MMU_InvalidateITLBMVA used once
MMU_InvalidateTLB 00000134

Symbol: MMU_InvalidateTLB
   Definitions
      At line 257 in file ..\src\2410slib.s
   Uses
      At line 256 in file ..\src\2410slib.s
Comment: MMU_InvalidateTLB used once
MMU_PrefetchICacheMVA 000000F4

Symbol: MMU_PrefetchICacheMVA
   Definitions
      At line 200 in file ..\src\2410slib.s
   Uses
      At line 199 in file ..\src\2410slib.s
Comment: MMU_PrefetchICacheMVA used once
MMU_SetAsyncBusMode 000000BC

Symbol: MMU_SetAsyncBusMode
   Definitions
      At line 150 in file ..\src\2410slib.s
   Uses
      At line 149 in file ..\src\2410slib.s
Comment: MMU_SetAsyncBusMode used once
MMU_SetDCacheLockdownBase 0000015C

Symbol: MMU_SetDCacheLockdownBase
   Definitions
      At line 292 in file ..\src\2410slib.s
   Uses
      At line 291 in file ..\src\2410slib.s
Comment: MMU_SetDCacheLockdownBase used once
MMU_SetDTLBLockdown 0000016C

Symbol: MMU_SetDTLBLockdown
   Definitions
      At line 309 in file ..\src\2410slib.s
   Uses
      At line 308 in file ..\src\2410slib.s
Comment: MMU_SetDTLBLockdown used once
MMU_SetDomain 000000D4

Symbol: MMU_SetDomain
   Definitions
      At line 171 in file ..\src\2410slib.s
   Uses
      At line 170 in file ..\src\2410slib.s
Comment: MMU_SetDomain used once
MMU_SetFastBusMode 000000AC

Symbol: MMU_SetFastBusMode
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 141 in file ..\src\2410slib.s
   Uses
      At line 140 in file ..\src\2410slib.s
Comment: MMU_SetFastBusMode used once
MMU_SetICacheLockdownBase 00000164

Symbol: MMU_SetICacheLockdownBase
   Definitions
      At line 299 in file ..\src\2410slib.s
   Uses
      At line 298 in file ..\src\2410slib.s
Comment: MMU_SetICacheLockdownBase used once
MMU_SetITLBLockdown 00000174

Symbol: MMU_SetITLBLockdown
   Definitions
      At line 316 in file ..\src\2410slib.s
   Uses
      At line 315 in file ..\src\2410slib.s
Comment: MMU_SetITLBLockdown used once
MMU_SetProcessId 0000017C

Symbol: MMU_SetProcessId
   Definitions
      At line 326 in file ..\src\2410slib.s
   Uses
      At line 325 in file ..\src\2410slib.s
Comment: MMU_SetProcessId used once
MMU_SetTTBase 000000CC

Symbol: MMU_SetTTBase
   Definitions
      At line 161 in file ..\src\2410slib.s
   Uses
      At line 160 in file ..\src\2410slib.s
Comment: MMU_SetTTBase used once
MMU_WaitForInterrupt 0000012C

Symbol: MMU_WaitForInterrupt
   Definitions
      At line 248 in file ..\src\2410slib.s
   Uses
      At line 247 in file ..\src\2410slib.s
Comment: MMU_WaitForInterrupt used once
SET_IF 00000000

Symbol: SET_IF
   Definitions
      At line 39 in file ..\src\2410slib.s
   Uses
      At line 38 in file ..\src\2410slib.s
Comment: SET_IF used once
WR_IF 00000014

Symbol: WR_IF
   Definitions
      At line 49 in file ..\src\2410slib.s
   Uses
      At line 48 in file ..\src\2410slib.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: WR_IF used once
37 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 12 in file ..\src\2410slib.s
   Uses
      At line 43 in file ..\src\2410slib.s
      At line 60 in file ..\src\2410slib.s

R1_A 00000002

Symbol: R1_A
   Definitions
      At line 69 in file ..\src\2410slib.s
   Uses
      At line 110 in file ..\src\2410slib.s
      At line 118 in file ..\src\2410slib.s

R1_C 00000004

Symbol: R1_C
   Definitions
      At line 68 in file ..\src\2410slib.s
   Uses
      At line 94 in file ..\src\2410slib.s
      At line 102 in file ..\src\2410slib.s

R1_I 00001000

Symbol: R1_I
   Definitions
      At line 67 in file ..\src\2410slib.s
   Uses
      At line 78 in file ..\src\2410slib.s
      At line 86 in file ..\src\2410slib.s

R1_M 00000001

Symbol: R1_M
   Definitions
      At line 70 in file ..\src\2410slib.s
   Uses
      At line 126 in file ..\src\2410slib.s
      At line 134 in file ..\src\2410slib.s

R1_iA 80000000

Symbol: R1_iA
   Definitions
      At line 71 in file ..\src\2410slib.s
   Uses
      At line 143 in file ..\src\2410slib.s
      At line 152 in file ..\src\2410slib.s

R1_nF 40000000

Symbol: R1_nF
   Definitions
      At line 72 in file ..\src\2410slib.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 143 in file ..\src\2410slib.s
      At line 152 in file ..\src\2410slib.s

7 symbols
375 symbols in table
